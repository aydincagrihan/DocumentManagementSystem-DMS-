// <auto-generated />
using System;
using DocumentManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentManagementSystem.Data.Migrations
{
    [DbContext(typeof(DmsDbContext))]
    partial class DmsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<string>("Descripton")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<int>("ProgramsId")
                        .HasColumnType("int");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramsId");

                    b.HasIndex("SemesterId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Programs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.ProjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ProjectType");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Reports", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<int>("ReportNo")
                        .HasColumnType("int");

                    b.Property<string>("ReportPath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<string>("SemesterType")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.StudentFinalGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AhlakiKonu")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Alintilama")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("CozumAciklama")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DisiplinliGelistirme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Duzen")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("DuzenBicim")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Ekler")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GenelBolunmusToplamPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GenelOzgunluk")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GenelSonPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GenelToplamRaporPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GercekciKisitlama")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("GereksinimAnaliz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IlerlemeRapor")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("IletisimYetenek")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Kaynak")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ProjeCozum")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ProjeGelistirme")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ProjeTanimi")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("RaporBoyut")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ReportsId")
                        .HasColumnType("int");

                    b.Property<decimal>("SistemKullanimKılavuz")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SistemTasarim")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SlaytKalite")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("SoruCevap")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Standartlar")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Testler")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ToplamDanismanPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ToplamKalitePuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ToplamRaporPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ToplamSunumPuan")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Toplantisikligi")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Uygulama")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UygulamaAraclari")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UygulamaKalitesi")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("YazimveDilkalite")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("YeniFikir")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ZamanKullanim")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("ReportsId");

                    b.ToTable("StudentFinalGrade");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.StudentInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProjectTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ProjectTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("StudentInfo");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PictureUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("UserType");
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Course", b =>
                {
                    b.HasOne("DocumentManagementSystem.Core.Entities.Programs", "Programs")
                        .WithMany("Courses")
                        .HasForeignKey("ProgramsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentManagementSystem.Core.Entities.Semester", "Semester")
                        .WithMany("Courses")
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.Reports", b =>
                {
                    b.HasOne("DocumentManagementSystem.Core.Entities.User", "User")
                        .WithMany("Reports")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.StudentFinalGrade", b =>
                {
                    b.HasOne("DocumentManagementSystem.Core.Entities.Reports", "Reports")
                        .WithMany("StudentFinalGrades")
                        .HasForeignKey("ReportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.StudentInfo", b =>
                {
                    b.HasOne("DocumentManagementSystem.Core.Entities.Course", "Course")
                        .WithMany("StudenInfo")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentManagementSystem.Core.Entities.ProjectType", "ProjectType")
                        .WithMany("StudenInfo")
                        .HasForeignKey("ProjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DocumentManagementSystem.Core.Entities.User", "User")
                        .WithMany("StudenInfo")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocumentManagementSystem.Core.Entities.User", b =>
                {
                    b.HasOne("DocumentManagementSystem.Core.Entities.UserType", "UserType")
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
